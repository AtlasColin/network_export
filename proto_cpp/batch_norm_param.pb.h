// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: batch_norm_param.proto

#ifndef PROTOBUF_batch_5fnorm_5fparam_2eproto__INCLUDED
#define PROTOBUF_batch_5fnorm_5fparam_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
class XZY_BatchNormalizationParam;
class XZY_BatchNormalizationParamDefaultTypeInternal;
extern XZY_BatchNormalizationParamDefaultTypeInternal _XZY_BatchNormalizationParam_default_instance_;

namespace protobuf_batch_5fnorm_5fparam_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_batch_5fnorm_5fparam_2eproto

// ===================================================================

class XZY_BatchNormalizationParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XZY_BatchNormalizationParam) */ {
 public:
  XZY_BatchNormalizationParam();
  virtual ~XZY_BatchNormalizationParam();

  XZY_BatchNormalizationParam(const XZY_BatchNormalizationParam& from);

  inline XZY_BatchNormalizationParam& operator=(const XZY_BatchNormalizationParam& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XZY_BatchNormalizationParam(XZY_BatchNormalizationParam&& from) noexcept
    : XZY_BatchNormalizationParam() {
    *this = ::std::move(from);
  }

  inline XZY_BatchNormalizationParam& operator=(XZY_BatchNormalizationParam&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XZY_BatchNormalizationParam& default_instance();

  static inline const XZY_BatchNormalizationParam* internal_default_instance() {
    return reinterpret_cast<const XZY_BatchNormalizationParam*>(
               &_XZY_BatchNormalizationParam_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(XZY_BatchNormalizationParam* other);
  friend void swap(XZY_BatchNormalizationParam& a, XZY_BatchNormalizationParam& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XZY_BatchNormalizationParam* New() const PROTOBUF_FINAL { return New(NULL); }

  XZY_BatchNormalizationParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XZY_BatchNormalizationParam& from);
  void MergeFrom(const XZY_BatchNormalizationParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XZY_BatchNormalizationParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float mean = 2;
  int mean_size() const;
  void clear_mean();
  static const int kMeanFieldNumber = 2;
  float mean(int index) const;
  void set_mean(int index, float value);
  void add_mean(float value);
  const ::google::protobuf::RepeatedField< float >&
      mean() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_mean();

  // repeated float variance = 3;
  int variance_size() const;
  void clear_variance();
  static const int kVarianceFieldNumber = 3;
  float variance(int index) const;
  void set_variance(int index, float value);
  void add_variance(float value);
  const ::google::protobuf::RepeatedField< float >&
      variance() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_variance();

  // repeated float scale = 4;
  int scale_size() const;
  void clear_scale();
  static const int kScaleFieldNumber = 4;
  float scale(int index) const;
  void set_scale(int index, float value);
  void add_scale(float value);
  const ::google::protobuf::RepeatedField< float >&
      scale() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_scale();

  // repeated float offset = 5;
  int offset_size() const;
  void clear_offset();
  static const int kOffsetFieldNumber = 5;
  float offset(int index) const;
  void set_offset(int index, float value);
  void add_offset(float value);
  const ::google::protobuf::RepeatedField< float >&
      offset() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_offset();

  // @@protoc_insertion_point(class_scope:XZY_BatchNormalizationParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< float > mean_;
  mutable int _mean_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > variance_;
  mutable int _variance_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > scale_;
  mutable int _scale_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > offset_;
  mutable int _offset_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_batch_5fnorm_5fparam_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// XZY_BatchNormalizationParam

// repeated float mean = 2;
inline int XZY_BatchNormalizationParam::mean_size() const {
  return mean_.size();
}
inline void XZY_BatchNormalizationParam::clear_mean() {
  mean_.Clear();
}
inline float XZY_BatchNormalizationParam::mean(int index) const {
  // @@protoc_insertion_point(field_get:XZY_BatchNormalizationParam.mean)
  return mean_.Get(index);
}
inline void XZY_BatchNormalizationParam::set_mean(int index, float value) {
  mean_.Set(index, value);
  // @@protoc_insertion_point(field_set:XZY_BatchNormalizationParam.mean)
}
inline void XZY_BatchNormalizationParam::add_mean(float value) {
  mean_.Add(value);
  // @@protoc_insertion_point(field_add:XZY_BatchNormalizationParam.mean)
}
inline const ::google::protobuf::RepeatedField< float >&
XZY_BatchNormalizationParam::mean() const {
  // @@protoc_insertion_point(field_list:XZY_BatchNormalizationParam.mean)
  return mean_;
}
inline ::google::protobuf::RepeatedField< float >*
XZY_BatchNormalizationParam::mutable_mean() {
  // @@protoc_insertion_point(field_mutable_list:XZY_BatchNormalizationParam.mean)
  return &mean_;
}

// repeated float variance = 3;
inline int XZY_BatchNormalizationParam::variance_size() const {
  return variance_.size();
}
inline void XZY_BatchNormalizationParam::clear_variance() {
  variance_.Clear();
}
inline float XZY_BatchNormalizationParam::variance(int index) const {
  // @@protoc_insertion_point(field_get:XZY_BatchNormalizationParam.variance)
  return variance_.Get(index);
}
inline void XZY_BatchNormalizationParam::set_variance(int index, float value) {
  variance_.Set(index, value);
  // @@protoc_insertion_point(field_set:XZY_BatchNormalizationParam.variance)
}
inline void XZY_BatchNormalizationParam::add_variance(float value) {
  variance_.Add(value);
  // @@protoc_insertion_point(field_add:XZY_BatchNormalizationParam.variance)
}
inline const ::google::protobuf::RepeatedField< float >&
XZY_BatchNormalizationParam::variance() const {
  // @@protoc_insertion_point(field_list:XZY_BatchNormalizationParam.variance)
  return variance_;
}
inline ::google::protobuf::RepeatedField< float >*
XZY_BatchNormalizationParam::mutable_variance() {
  // @@protoc_insertion_point(field_mutable_list:XZY_BatchNormalizationParam.variance)
  return &variance_;
}

// repeated float scale = 4;
inline int XZY_BatchNormalizationParam::scale_size() const {
  return scale_.size();
}
inline void XZY_BatchNormalizationParam::clear_scale() {
  scale_.Clear();
}
inline float XZY_BatchNormalizationParam::scale(int index) const {
  // @@protoc_insertion_point(field_get:XZY_BatchNormalizationParam.scale)
  return scale_.Get(index);
}
inline void XZY_BatchNormalizationParam::set_scale(int index, float value) {
  scale_.Set(index, value);
  // @@protoc_insertion_point(field_set:XZY_BatchNormalizationParam.scale)
}
inline void XZY_BatchNormalizationParam::add_scale(float value) {
  scale_.Add(value);
  // @@protoc_insertion_point(field_add:XZY_BatchNormalizationParam.scale)
}
inline const ::google::protobuf::RepeatedField< float >&
XZY_BatchNormalizationParam::scale() const {
  // @@protoc_insertion_point(field_list:XZY_BatchNormalizationParam.scale)
  return scale_;
}
inline ::google::protobuf::RepeatedField< float >*
XZY_BatchNormalizationParam::mutable_scale() {
  // @@protoc_insertion_point(field_mutable_list:XZY_BatchNormalizationParam.scale)
  return &scale_;
}

// repeated float offset = 5;
inline int XZY_BatchNormalizationParam::offset_size() const {
  return offset_.size();
}
inline void XZY_BatchNormalizationParam::clear_offset() {
  offset_.Clear();
}
inline float XZY_BatchNormalizationParam::offset(int index) const {
  // @@protoc_insertion_point(field_get:XZY_BatchNormalizationParam.offset)
  return offset_.Get(index);
}
inline void XZY_BatchNormalizationParam::set_offset(int index, float value) {
  offset_.Set(index, value);
  // @@protoc_insertion_point(field_set:XZY_BatchNormalizationParam.offset)
}
inline void XZY_BatchNormalizationParam::add_offset(float value) {
  offset_.Add(value);
  // @@protoc_insertion_point(field_add:XZY_BatchNormalizationParam.offset)
}
inline const ::google::protobuf::RepeatedField< float >&
XZY_BatchNormalizationParam::offset() const {
  // @@protoc_insertion_point(field_list:XZY_BatchNormalizationParam.offset)
  return offset_;
}
inline ::google::protobuf::RepeatedField< float >*
XZY_BatchNormalizationParam::mutable_offset() {
  // @@protoc_insertion_point(field_mutable_list:XZY_BatchNormalizationParam.offset)
  return &offset_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_batch_5fnorm_5fparam_2eproto__INCLUDED
