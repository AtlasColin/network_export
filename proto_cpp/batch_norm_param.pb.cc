// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: batch_norm_param.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "batch_norm_param.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class XZY_BatchNormalizationParamDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<XZY_BatchNormalizationParam>
     _instance;
} _XZY_BatchNormalizationParam_default_instance_;

namespace protobuf_batch_5fnorm_5fparam_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XZY_BatchNormalizationParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XZY_BatchNormalizationParam, mean_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XZY_BatchNormalizationParam, variance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XZY_BatchNormalizationParam, scale_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XZY_BatchNormalizationParam, offset_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(XZY_BatchNormalizationParam)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_XZY_BatchNormalizationParam_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "batch_norm_param.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _XZY_BatchNormalizationParam_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_XZY_BatchNormalizationParam_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\026batch_norm_param.proto\"\\\n\033XZY_BatchNor"
      "malizationParam\022\014\n\004mean\030\002 \003(\002\022\020\n\010varianc"
      "e\030\003 \003(\002\022\r\n\005scale\030\004 \003(\002\022\016\n\006offset\030\005 \003(\002b\006"
      "proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 126);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "batch_norm_param.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_batch_5fnorm_5fparam_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XZY_BatchNormalizationParam::kMeanFieldNumber;
const int XZY_BatchNormalizationParam::kVarianceFieldNumber;
const int XZY_BatchNormalizationParam::kScaleFieldNumber;
const int XZY_BatchNormalizationParam::kOffsetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XZY_BatchNormalizationParam::XZY_BatchNormalizationParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_batch_5fnorm_5fparam_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XZY_BatchNormalizationParam)
}
XZY_BatchNormalizationParam::XZY_BatchNormalizationParam(const XZY_BatchNormalizationParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      mean_(from.mean_),
      variance_(from.variance_),
      scale_(from.scale_),
      offset_(from.offset_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:XZY_BatchNormalizationParam)
}

void XZY_BatchNormalizationParam::SharedCtor() {
  _cached_size_ = 0;
}

XZY_BatchNormalizationParam::~XZY_BatchNormalizationParam() {
  // @@protoc_insertion_point(destructor:XZY_BatchNormalizationParam)
  SharedDtor();
}

void XZY_BatchNormalizationParam::SharedDtor() {
}

void XZY_BatchNormalizationParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XZY_BatchNormalizationParam::descriptor() {
  protobuf_batch_5fnorm_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_batch_5fnorm_5fparam_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XZY_BatchNormalizationParam& XZY_BatchNormalizationParam::default_instance() {
  protobuf_batch_5fnorm_5fparam_2eproto::InitDefaults();
  return *internal_default_instance();
}

XZY_BatchNormalizationParam* XZY_BatchNormalizationParam::New(::google::protobuf::Arena* arena) const {
  XZY_BatchNormalizationParam* n = new XZY_BatchNormalizationParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XZY_BatchNormalizationParam::Clear() {
// @@protoc_insertion_point(message_clear_start:XZY_BatchNormalizationParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mean_.Clear();
  variance_.Clear();
  scale_.Clear();
  offset_.Clear();
  _internal_metadata_.Clear();
}

bool XZY_BatchNormalizationParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XZY_BatchNormalizationParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float mean = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_mean())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 18u, input, this->mutable_mean())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float variance = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_variance())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 26u, input, this->mutable_variance())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float scale = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_scale())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 34u, input, this->mutable_scale())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float offset = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_offset())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 42u, input, this->mutable_offset())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XZY_BatchNormalizationParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XZY_BatchNormalizationParam)
  return false;
#undef DO_
}

void XZY_BatchNormalizationParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XZY_BatchNormalizationParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float mean = 2;
  if (this->mean_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _mean_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->mean().data(), this->mean_size(), output);
  }

  // repeated float variance = 3;
  if (this->variance_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _variance_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->variance().data(), this->variance_size(), output);
  }

  // repeated float scale = 4;
  if (this->scale_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _scale_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->scale().data(), this->scale_size(), output);
  }

  // repeated float offset = 5;
  if (this->offset_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _offset_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->offset().data(), this->offset_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XZY_BatchNormalizationParam)
}

::google::protobuf::uint8* XZY_BatchNormalizationParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XZY_BatchNormalizationParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float mean = 2;
  if (this->mean_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _mean_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->mean_, target);
  }

  // repeated float variance = 3;
  if (this->variance_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _variance_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->variance_, target);
  }

  // repeated float scale = 4;
  if (this->scale_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _scale_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->scale_, target);
  }

  // repeated float offset = 5;
  if (this->offset_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _offset_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->offset_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XZY_BatchNormalizationParam)
  return target;
}

size_t XZY_BatchNormalizationParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XZY_BatchNormalizationParam)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated float mean = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->mean_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _mean_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float variance = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->variance_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _variance_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float scale = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->scale_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _scale_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float offset = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->offset_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _offset_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XZY_BatchNormalizationParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XZY_BatchNormalizationParam)
  GOOGLE_DCHECK_NE(&from, this);
  const XZY_BatchNormalizationParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XZY_BatchNormalizationParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XZY_BatchNormalizationParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XZY_BatchNormalizationParam)
    MergeFrom(*source);
  }
}

void XZY_BatchNormalizationParam::MergeFrom(const XZY_BatchNormalizationParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XZY_BatchNormalizationParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mean_.MergeFrom(from.mean_);
  variance_.MergeFrom(from.variance_);
  scale_.MergeFrom(from.scale_);
  offset_.MergeFrom(from.offset_);
}

void XZY_BatchNormalizationParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XZY_BatchNormalizationParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XZY_BatchNormalizationParam::CopyFrom(const XZY_BatchNormalizationParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XZY_BatchNormalizationParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XZY_BatchNormalizationParam::IsInitialized() const {
  return true;
}

void XZY_BatchNormalizationParam::Swap(XZY_BatchNormalizationParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XZY_BatchNormalizationParam::InternalSwap(XZY_BatchNormalizationParam* other) {
  using std::swap;
  mean_.InternalSwap(&other->mean_);
  variance_.InternalSwap(&other->variance_);
  scale_.InternalSwap(&other->scale_);
  offset_.InternalSwap(&other->offset_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XZY_BatchNormalizationParam::GetMetadata() const {
  protobuf_batch_5fnorm_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_batch_5fnorm_5fparam_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// XZY_BatchNormalizationParam

// repeated float mean = 2;
int XZY_BatchNormalizationParam::mean_size() const {
  return mean_.size();
}
void XZY_BatchNormalizationParam::clear_mean() {
  mean_.Clear();
}
float XZY_BatchNormalizationParam::mean(int index) const {
  // @@protoc_insertion_point(field_get:XZY_BatchNormalizationParam.mean)
  return mean_.Get(index);
}
void XZY_BatchNormalizationParam::set_mean(int index, float value) {
  mean_.Set(index, value);
  // @@protoc_insertion_point(field_set:XZY_BatchNormalizationParam.mean)
}
void XZY_BatchNormalizationParam::add_mean(float value) {
  mean_.Add(value);
  // @@protoc_insertion_point(field_add:XZY_BatchNormalizationParam.mean)
}
const ::google::protobuf::RepeatedField< float >&
XZY_BatchNormalizationParam::mean() const {
  // @@protoc_insertion_point(field_list:XZY_BatchNormalizationParam.mean)
  return mean_;
}
::google::protobuf::RepeatedField< float >*
XZY_BatchNormalizationParam::mutable_mean() {
  // @@protoc_insertion_point(field_mutable_list:XZY_BatchNormalizationParam.mean)
  return &mean_;
}

// repeated float variance = 3;
int XZY_BatchNormalizationParam::variance_size() const {
  return variance_.size();
}
void XZY_BatchNormalizationParam::clear_variance() {
  variance_.Clear();
}
float XZY_BatchNormalizationParam::variance(int index) const {
  // @@protoc_insertion_point(field_get:XZY_BatchNormalizationParam.variance)
  return variance_.Get(index);
}
void XZY_BatchNormalizationParam::set_variance(int index, float value) {
  variance_.Set(index, value);
  // @@protoc_insertion_point(field_set:XZY_BatchNormalizationParam.variance)
}
void XZY_BatchNormalizationParam::add_variance(float value) {
  variance_.Add(value);
  // @@protoc_insertion_point(field_add:XZY_BatchNormalizationParam.variance)
}
const ::google::protobuf::RepeatedField< float >&
XZY_BatchNormalizationParam::variance() const {
  // @@protoc_insertion_point(field_list:XZY_BatchNormalizationParam.variance)
  return variance_;
}
::google::protobuf::RepeatedField< float >*
XZY_BatchNormalizationParam::mutable_variance() {
  // @@protoc_insertion_point(field_mutable_list:XZY_BatchNormalizationParam.variance)
  return &variance_;
}

// repeated float scale = 4;
int XZY_BatchNormalizationParam::scale_size() const {
  return scale_.size();
}
void XZY_BatchNormalizationParam::clear_scale() {
  scale_.Clear();
}
float XZY_BatchNormalizationParam::scale(int index) const {
  // @@protoc_insertion_point(field_get:XZY_BatchNormalizationParam.scale)
  return scale_.Get(index);
}
void XZY_BatchNormalizationParam::set_scale(int index, float value) {
  scale_.Set(index, value);
  // @@protoc_insertion_point(field_set:XZY_BatchNormalizationParam.scale)
}
void XZY_BatchNormalizationParam::add_scale(float value) {
  scale_.Add(value);
  // @@protoc_insertion_point(field_add:XZY_BatchNormalizationParam.scale)
}
const ::google::protobuf::RepeatedField< float >&
XZY_BatchNormalizationParam::scale() const {
  // @@protoc_insertion_point(field_list:XZY_BatchNormalizationParam.scale)
  return scale_;
}
::google::protobuf::RepeatedField< float >*
XZY_BatchNormalizationParam::mutable_scale() {
  // @@protoc_insertion_point(field_mutable_list:XZY_BatchNormalizationParam.scale)
  return &scale_;
}

// repeated float offset = 5;
int XZY_BatchNormalizationParam::offset_size() const {
  return offset_.size();
}
void XZY_BatchNormalizationParam::clear_offset() {
  offset_.Clear();
}
float XZY_BatchNormalizationParam::offset(int index) const {
  // @@protoc_insertion_point(field_get:XZY_BatchNormalizationParam.offset)
  return offset_.Get(index);
}
void XZY_BatchNormalizationParam::set_offset(int index, float value) {
  offset_.Set(index, value);
  // @@protoc_insertion_point(field_set:XZY_BatchNormalizationParam.offset)
}
void XZY_BatchNormalizationParam::add_offset(float value) {
  offset_.Add(value);
  // @@protoc_insertion_point(field_add:XZY_BatchNormalizationParam.offset)
}
const ::google::protobuf::RepeatedField< float >&
XZY_BatchNormalizationParam::offset() const {
  // @@protoc_insertion_point(field_list:XZY_BatchNormalizationParam.offset)
  return offset_;
}
::google::protobuf::RepeatedField< float >*
XZY_BatchNormalizationParam::mutable_offset() {
  // @@protoc_insertion_point(field_mutable_list:XZY_BatchNormalizationParam.offset)
  return &offset_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
