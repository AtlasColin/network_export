// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: max_pooling_param.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "max_pooling_param.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class XZY_MaxPoolingParamDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<XZY_MaxPoolingParam>
     _instance;
} _XZY_MaxPoolingParam_default_instance_;

namespace protobuf_max_5fpooling_5fparam_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XZY_MaxPoolingParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XZY_MaxPoolingParam, col_matrix_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XZY_MaxPoolingParam, kernel_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XZY_MaxPoolingParam, col_table_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(XZY_MaxPoolingParam)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_XZY_MaxPoolingParam_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "max_pooling_param.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::protobuf_size_2eproto::InitDefaults();
  _XZY_MaxPoolingParam_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_XZY_MaxPoolingParam_default_instance_);_XZY_MaxPoolingParam_default_instance_._instance.get_mutable()->col_matrix_size_ = const_cast< ::XZY_Size*>(
      ::XZY_Size::internal_default_instance());
  _XZY_MaxPoolingParam_default_instance_._instance.get_mutable()->kernel_size_ = const_cast< ::XZY_Size*>(
      ::XZY_Size::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\027max_pooling_param.proto\032\nsize.proto\"l\n"
      "\023XZY_MaxPoolingParam\022\"\n\017col_matrix_size\030"
      "\001 \001(\0132\t.XZY_Size\022\036\n\013kernel_size\030\002 \001(\0132\t."
      "XZY_Size\022\021\n\tcol_table\030\003 \003(\005b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 155);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "max_pooling_param.proto", &protobuf_RegisterTypes);
  ::protobuf_size_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_max_5fpooling_5fparam_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XZY_MaxPoolingParam::kColMatrixSizeFieldNumber;
const int XZY_MaxPoolingParam::kKernelSizeFieldNumber;
const int XZY_MaxPoolingParam::kColTableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XZY_MaxPoolingParam::XZY_MaxPoolingParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_max_5fpooling_5fparam_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XZY_MaxPoolingParam)
}
XZY_MaxPoolingParam::XZY_MaxPoolingParam(const XZY_MaxPoolingParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      col_table_(from.col_table_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_col_matrix_size()) {
    col_matrix_size_ = new ::XZY_Size(*from.col_matrix_size_);
  } else {
    col_matrix_size_ = NULL;
  }
  if (from.has_kernel_size()) {
    kernel_size_ = new ::XZY_Size(*from.kernel_size_);
  } else {
    kernel_size_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:XZY_MaxPoolingParam)
}

void XZY_MaxPoolingParam::SharedCtor() {
  ::memset(&col_matrix_size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&kernel_size_) -
      reinterpret_cast<char*>(&col_matrix_size_)) + sizeof(kernel_size_));
  _cached_size_ = 0;
}

XZY_MaxPoolingParam::~XZY_MaxPoolingParam() {
  // @@protoc_insertion_point(destructor:XZY_MaxPoolingParam)
  SharedDtor();
}

void XZY_MaxPoolingParam::SharedDtor() {
  if (this != internal_default_instance()) delete col_matrix_size_;
  if (this != internal_default_instance()) delete kernel_size_;
}

void XZY_MaxPoolingParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XZY_MaxPoolingParam::descriptor() {
  protobuf_max_5fpooling_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_max_5fpooling_5fparam_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XZY_MaxPoolingParam& XZY_MaxPoolingParam::default_instance() {
  protobuf_max_5fpooling_5fparam_2eproto::InitDefaults();
  return *internal_default_instance();
}

XZY_MaxPoolingParam* XZY_MaxPoolingParam::New(::google::protobuf::Arena* arena) const {
  XZY_MaxPoolingParam* n = new XZY_MaxPoolingParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XZY_MaxPoolingParam::Clear() {
// @@protoc_insertion_point(message_clear_start:XZY_MaxPoolingParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  col_table_.Clear();
  if (GetArenaNoVirtual() == NULL && col_matrix_size_ != NULL) {
    delete col_matrix_size_;
  }
  col_matrix_size_ = NULL;
  if (GetArenaNoVirtual() == NULL && kernel_size_ != NULL) {
    delete kernel_size_;
  }
  kernel_size_ = NULL;
  _internal_metadata_.Clear();
}

bool XZY_MaxPoolingParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XZY_MaxPoolingParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .XZY_Size col_matrix_size = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_col_matrix_size()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .XZY_Size kernel_size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_kernel_size()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 col_table = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_col_table())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 26u, input, this->mutable_col_table())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XZY_MaxPoolingParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XZY_MaxPoolingParam)
  return false;
#undef DO_
}

void XZY_MaxPoolingParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XZY_MaxPoolingParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .XZY_Size col_matrix_size = 1;
  if (this->has_col_matrix_size()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->col_matrix_size_, output);
  }

  // .XZY_Size kernel_size = 2;
  if (this->has_kernel_size()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->kernel_size_, output);
  }

  // repeated int32 col_table = 3;
  if (this->col_table_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _col_table_cached_byte_size_));
  }
  for (int i = 0, n = this->col_table_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->col_table(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XZY_MaxPoolingParam)
}

::google::protobuf::uint8* XZY_MaxPoolingParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XZY_MaxPoolingParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .XZY_Size col_matrix_size = 1;
  if (this->has_col_matrix_size()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->col_matrix_size_, deterministic, target);
  }

  // .XZY_Size kernel_size = 2;
  if (this->has_kernel_size()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->kernel_size_, deterministic, target);
  }

  // repeated int32 col_table = 3;
  if (this->col_table_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _col_table_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->col_table_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XZY_MaxPoolingParam)
  return target;
}

size_t XZY_MaxPoolingParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XZY_MaxPoolingParam)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 col_table = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->col_table_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _col_table_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .XZY_Size col_matrix_size = 1;
  if (this->has_col_matrix_size()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->col_matrix_size_);
  }

  // .XZY_Size kernel_size = 2;
  if (this->has_kernel_size()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->kernel_size_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XZY_MaxPoolingParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XZY_MaxPoolingParam)
  GOOGLE_DCHECK_NE(&from, this);
  const XZY_MaxPoolingParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XZY_MaxPoolingParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XZY_MaxPoolingParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XZY_MaxPoolingParam)
    MergeFrom(*source);
  }
}

void XZY_MaxPoolingParam::MergeFrom(const XZY_MaxPoolingParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XZY_MaxPoolingParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  col_table_.MergeFrom(from.col_table_);
  if (from.has_col_matrix_size()) {
    mutable_col_matrix_size()->::XZY_Size::MergeFrom(from.col_matrix_size());
  }
  if (from.has_kernel_size()) {
    mutable_kernel_size()->::XZY_Size::MergeFrom(from.kernel_size());
  }
}

void XZY_MaxPoolingParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XZY_MaxPoolingParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XZY_MaxPoolingParam::CopyFrom(const XZY_MaxPoolingParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XZY_MaxPoolingParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XZY_MaxPoolingParam::IsInitialized() const {
  return true;
}

void XZY_MaxPoolingParam::Swap(XZY_MaxPoolingParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XZY_MaxPoolingParam::InternalSwap(XZY_MaxPoolingParam* other) {
  using std::swap;
  col_table_.InternalSwap(&other->col_table_);
  swap(col_matrix_size_, other->col_matrix_size_);
  swap(kernel_size_, other->kernel_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XZY_MaxPoolingParam::GetMetadata() const {
  protobuf_max_5fpooling_5fparam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_max_5fpooling_5fparam_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// XZY_MaxPoolingParam

// .XZY_Size col_matrix_size = 1;
bool XZY_MaxPoolingParam::has_col_matrix_size() const {
  return this != internal_default_instance() && col_matrix_size_ != NULL;
}
void XZY_MaxPoolingParam::clear_col_matrix_size() {
  if (GetArenaNoVirtual() == NULL && col_matrix_size_ != NULL) delete col_matrix_size_;
  col_matrix_size_ = NULL;
}
const ::XZY_Size& XZY_MaxPoolingParam::col_matrix_size() const {
  const ::XZY_Size* p = col_matrix_size_;
  // @@protoc_insertion_point(field_get:XZY_MaxPoolingParam.col_matrix_size)
  return p != NULL ? *p : *reinterpret_cast<const ::XZY_Size*>(
      &::_XZY_Size_default_instance_);
}
::XZY_Size* XZY_MaxPoolingParam::mutable_col_matrix_size() {
  
  if (col_matrix_size_ == NULL) {
    col_matrix_size_ = new ::XZY_Size;
  }
  // @@protoc_insertion_point(field_mutable:XZY_MaxPoolingParam.col_matrix_size)
  return col_matrix_size_;
}
::XZY_Size* XZY_MaxPoolingParam::release_col_matrix_size() {
  // @@protoc_insertion_point(field_release:XZY_MaxPoolingParam.col_matrix_size)
  
  ::XZY_Size* temp = col_matrix_size_;
  col_matrix_size_ = NULL;
  return temp;
}
void XZY_MaxPoolingParam::set_allocated_col_matrix_size(::XZY_Size* col_matrix_size) {
  delete col_matrix_size_;
  col_matrix_size_ = col_matrix_size;
  if (col_matrix_size) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:XZY_MaxPoolingParam.col_matrix_size)
}

// .XZY_Size kernel_size = 2;
bool XZY_MaxPoolingParam::has_kernel_size() const {
  return this != internal_default_instance() && kernel_size_ != NULL;
}
void XZY_MaxPoolingParam::clear_kernel_size() {
  if (GetArenaNoVirtual() == NULL && kernel_size_ != NULL) delete kernel_size_;
  kernel_size_ = NULL;
}
const ::XZY_Size& XZY_MaxPoolingParam::kernel_size() const {
  const ::XZY_Size* p = kernel_size_;
  // @@protoc_insertion_point(field_get:XZY_MaxPoolingParam.kernel_size)
  return p != NULL ? *p : *reinterpret_cast<const ::XZY_Size*>(
      &::_XZY_Size_default_instance_);
}
::XZY_Size* XZY_MaxPoolingParam::mutable_kernel_size() {
  
  if (kernel_size_ == NULL) {
    kernel_size_ = new ::XZY_Size;
  }
  // @@protoc_insertion_point(field_mutable:XZY_MaxPoolingParam.kernel_size)
  return kernel_size_;
}
::XZY_Size* XZY_MaxPoolingParam::release_kernel_size() {
  // @@protoc_insertion_point(field_release:XZY_MaxPoolingParam.kernel_size)
  
  ::XZY_Size* temp = kernel_size_;
  kernel_size_ = NULL;
  return temp;
}
void XZY_MaxPoolingParam::set_allocated_kernel_size(::XZY_Size* kernel_size) {
  delete kernel_size_;
  kernel_size_ = kernel_size;
  if (kernel_size) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:XZY_MaxPoolingParam.kernel_size)
}

// repeated int32 col_table = 3;
int XZY_MaxPoolingParam::col_table_size() const {
  return col_table_.size();
}
void XZY_MaxPoolingParam::clear_col_table() {
  col_table_.Clear();
}
::google::protobuf::int32 XZY_MaxPoolingParam::col_table(int index) const {
  // @@protoc_insertion_point(field_get:XZY_MaxPoolingParam.col_table)
  return col_table_.Get(index);
}
void XZY_MaxPoolingParam::set_col_table(int index, ::google::protobuf::int32 value) {
  col_table_.Set(index, value);
  // @@protoc_insertion_point(field_set:XZY_MaxPoolingParam.col_table)
}
void XZY_MaxPoolingParam::add_col_table(::google::protobuf::int32 value) {
  col_table_.Add(value);
  // @@protoc_insertion_point(field_add:XZY_MaxPoolingParam.col_table)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
XZY_MaxPoolingParam::col_table() const {
  // @@protoc_insertion_point(field_list:XZY_MaxPoolingParam.col_table)
  return col_table_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
XZY_MaxPoolingParam::mutable_col_table() {
  // @@protoc_insertion_point(field_mutable_list:XZY_MaxPoolingParam.col_table)
  return &col_table_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
